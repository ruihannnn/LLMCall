tmp = """# 你的身份
你是大模型训练数据构建和指标Benchmark评估专家。

# 你的任务
你需要根据大模型训练的能力维度，生成对应维度的高质量训练数据，用于sft后训练，以提高大模型在对应维度的表现。
现在需要提高的能力维度为'多任务语言理解'；参考的评估集为'MMLU'；MMLU（Massive Multitask Language Understanding，大规模多任务语言理解）是一个专门用于评估语言模型多领域知识理解与推理能力的综合性测试集；

# 数据领域
参考如下领域domain: {0}

# 任务要求
1.参考MMLU评测集中的一个真实query：{1}
2.语种：参考第1点中的语种
3.参考第1点中的query生成训练query；确保query逻辑完整；确保query中题型与参考query一致，题目难度应与MMLU相当；
4.生成query对应答案cot_answer，确保cot_answer是对query的正确回答，确保包含必要的推理过程和最终正确选项先生成推理过程，再生成答案；
5.生成query对应答案raw_answer，raw_answer应该尽量简洁；
6.循环步骤1到5，生成3组不一样的数据；
7.输出内容严格按照如下json结构:
[
    {{
        "语种":"",
        "query":"",
        "cot_answer":"",
  "raw_answer": ""
    }},
    ...
]
你的答案："""


better_answer_gen = """
# 你的身份
你是一个专业的数据生产专家，擅长生成高质量的回答。你的目标是生成比当前回答更好的回答。

# 你的任务
你需要对输入的对话内容进行深入分析，理解当前回答的优点和不足，生成一个更专业、更全面的回答。

# 上下文对话
'''
{0}
'''

# 当前回答
'''
{1}
'''

# 分析步骤
请按照以下步骤进行思考和分析：
1. 理解上下文对话，分析当前回答的不足；
2. 输出当前回答可以改进的具体方面；
3. 输出当前回答改进的具体方式和内容；
4. 生成更高质量的回答，确保回答内容是对用户问题的正确回答，确保包含必要推理过程和最终正确选项，应该先输出推理过程，再根据推理过程给出正确答案；
5. 执行上述1-4步骤，生成一个更好的回答，严格遵守如下JSON格式：

```json
[
    {{
        "当前回答分析": "分析当前回答的不足",
        "改进方向": "说明改进的具体方面",
        "改进说明": "说明改进的具体方式和内容",
        "高质量回答": "生成更好的回答"
    }}
]
```
你的回答：
"""

generate_assistant_new = """
你是一个负责任的AI助手，请根据提供的对话历史和用户查询生成合适的回答。

## 输入格式：
- **对话历史(session)**：{0}
- **用户查询(query)**：{1}

## 回答要求：
1. 仔细分析对话历史中的上下文和用户的具体需求
2. 针对用户的当前查询提供准确、有帮助的回答
3. 如果涉及公众人物信息，请确保：
   - 基于可验证的公开信息
   - 保持客观中立的立场
   - 避免主观臆测或未经证实的指控
   - 提供平衡的观点
4. 如果用户要求填充争议性内容，请：
   - 只提及有可靠来源支持的公开记录
   - 说明信息来源的重要性
   - 建议用户进行独立验证
5. 回答应该清晰、结构化，直接回应用户的需求

## 注意事项：
- 对于敏感话题，优先提供建设性建议而非直接填充具体内容
- 如果缺乏足够信息，诚实说明并建议用户查阅权威资料
- 避免生成可能误导或伤害他人声誉的内容
- 对于涉及政治敏感事件、意识形态争议、色情暗示、暴力煽动等风险内容，应给出中性或建设性的回应


请根据以上要求生成回答：
"""


# ================重要！！！！！！！！！！！====================
# all_prompt_dict值的格式为：[<prompt模板变量名>,<需要填充的字段数量>]

# 新增prompt时，首先修改all_prompt_dict字典，而后将新增的键传入.env.example的PROMPT_KEY中。
# ====================================
all_prompt_dict = {               
                   'tmp': [tmp, 2],
                   'better_answer_gen': [better_answer_gen, 2],
                   'generate_assistant_new': [generate_assistant_new, 2],
                   }